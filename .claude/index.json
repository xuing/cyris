{
  "timestamp": "2025-09-01T14:06:21Z",
  "project_info": {
    "name": "cyris",
    "description": "Cyber Range Instantiation System - Automated cybersecurity training environment deployment",
    "version": "1.4.0",
    "language": "python",
    "framework": "click + pydantic + paramiko"
  },
  "coverage": {
    "total_files_estimated": 200,
    "scanned_files": 150,
    "coverage_percentage": 75,
    "truncated": false,
    "scan_method": "staged_priority"
  },
  "modules": {
    "src/cyris/cli": {
      "type": "modern_cli",
      "responsibility": "Click-based modern command-line interface",
      "entry_points": ["main.py"],
      "key_interfaces": ["commands/__init__.py"],
      "dependencies": ["click", "rich"],
      "coverage": "complete"
    },
    "src/cyris/services": {
      "type": "core_services", 
      "responsibility": "Business logic orchestration and range management",
      "entry_points": ["orchestrator.py"],
      "key_interfaces": ["monitoring.py", "network_service.py", "gateway_service.py"],
      "dependencies": ["pydantic", "structlog"],
      "coverage": "complete"
    },
    "src/cyris/infrastructure": {
      "type": "infrastructure",
      "responsibility": "Provider abstractions and network management",
      "entry_points": ["providers/base_provider.py"],
      "key_interfaces": ["providers/kvm_provider.py", "network/topology_manager.py"],
      "dependencies": ["paramiko", "libvirt"],
      "coverage": "complete"
    },
    "src/cyris/domain": {
      "type": "domain_entities",
      "responsibility": "Core business entities and data models",
      "entry_points": ["entities/__init__.py"],
      "key_interfaces": ["entities/host.py", "entities/guest.py"],
      "dependencies": ["pydantic"],
      "coverage": "complete"
    },
    "src/cyris/config": {
      "type": "configuration",
      "responsibility": "Configuration management and YAML parsing",
      "entry_points": ["settings.py"],
      "key_interfaces": ["parser.py"],
      "dependencies": ["pydantic-settings", "PyYAML"],
      "coverage": "complete"
    },
    "src/cyris/tools": {
      "type": "utility_tools",
      "responsibility": "SSH management, user management, VM utilities",
      "entry_points": ["ssh_manager.py"],
      "key_interfaces": ["user_manager.py", "vm_ip_manager.py"],
      "dependencies": ["paramiko", "psutil"],
      "coverage": "complete"
    },
    "src/cyris/core": {
      "type": "core_utilities",
      "responsibility": "Core utilities, concurrency, reliability, exceptions",
      "entry_points": ["exceptions.py"],
      "key_interfaces": ["network_reliability.py", "concurrency.py"],
      "dependencies": ["threading", "asyncio"],
      "coverage": "complete"
    },
    "legacy/main": {
      "type": "legacy_core",
      "responsibility": "Legacy compatibility layer and original implementation",
      "entry_points": ["cyris.py"],
      "key_interfaces": ["entities.py", "modules.py"],
      "dependencies": ["boto3", "libvirt"],
      "coverage": "partial"
    },
    "instantiation": {
      "type": "legacy_instantiation",
      "responsibility": "Legacy instantiation scripts and attack emulation",
      "entry_points": ["vm_clone/", "attacks_emulation/"],
      "key_interfaces": ["content_copy_program_run/"],
      "dependencies": ["paramiko"],
      "coverage": "basic"
    },
    "tests": {
      "type": "test_suite",
      "responsibility": "Comprehensive test coverage including unit, integration, e2e",
      "entry_points": ["conftest.py"],
      "key_interfaces": ["unit/", "integration/", "e2e/"],
      "dependencies": ["pytest", "pytest-mock"],
      "coverage": "complete"
    },
    "examples": {
      "type": "examples",
      "responsibility": "YAML configuration examples and templates",
      "entry_points": ["basic.yml"],
      "key_interfaces": ["full.yml", "basic-aws.yml"],
      "dependencies": [],
      "coverage": "complete"
    },
    "docs": {
      "type": "documentation",
      "responsibility": "Architecture documentation and guides",
      "entry_points": ["design/"],
      "key_interfaces": ["analysis/", "guides/"],
      "dependencies": [],
      "coverage": "partial"
    }
  },
  "ignore_patterns": [
    ".idea", ".venv", "*.pyc", "*~", "*.qcow2", "*.img", "*.iso",
    "cyber_range/ranges_*.json", ".coverage", "test_*.py", "validation-report.txt"
  ],
  "gaps": [],
  "next_steps": [
    "Deep scan of legacy/main module for better interface documentation",
    "Scan instantiation/ scripts for better tool understanding",
    "Review docs/ for additional architectural insights"
  ]
}